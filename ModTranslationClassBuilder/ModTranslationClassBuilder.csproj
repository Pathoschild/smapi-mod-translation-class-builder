<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!--NuGet package-->
    <PackageId>Pathoschild.Stardew.ModTranslationClassBuilder</PackageId>
    <Title>SMAPI mod translation class builder</Title>
    <Version>2.1.0</Version>
    <Authors>Pathoschild</Authors>
    <Description>Access your SMAPI mod translation files in a strongly-typed way.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>images/package-icon.png</PackageIcon>
    <PackageProjectUrl>https://github.com/Pathoschild/SMAPI-ModTranslationClassBuilder#readme</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Pathoschild/SMAPI-ModTranslationClassBuilder.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>smapi;stardew;valley;i18n</PackageTags>

    <!--build-->
    <AssemblyName>Pathoschild.Stardew.ModTranslationClassBuilder</AssemblyName>
    <RootNamespace>Pathoschild.Stardew.ModTranslationClassBuilder</RootNamespace>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>

    <!--copy dependency DLLs to bin folder so we can include them in package -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

    <!-- don't add translation class builder as a normal assembly reference, we'll package it as an analyzer below -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.0.1" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" GeneratePathProperty="true" PrivateAssets="all" />
  </ItemGroup>

  <!-- undocumented hack to fix NuGet dependencies in source generators: https://github.com/dotnet/roslyn/discussions/47517 -->
  <PropertyGroup>
    <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
  </PropertyGroup>
  <Target Name="GetDependencyTargetPaths">
    <ItemGroup>
      <TargetPathWithTargetPlatformMoniker Include="$(PKGNewtonsoft_Json)\lib\netstandard2.0\Newtonsoft.Json.dll" IncludeRuntimeDependency="false" />
    </ItemGroup>
  </Target>

  <!-- package structure -->
  <ItemGroup>
    <None Include="..\README.md" Pack="true" PackagePath="\"/>
    <None PackagePath="analyzers/dotnet/cs" Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" Visible="false" />
    <None PackagePath="analyzers/dotnet/cs" Include="$(OutputPath)\Newtonsoft.Json.dll" Pack="true" Visible="false" />
    <None PackagePath="build/Pathoschild.Stardew.ModTranslationClassBuilder.targets" Include="assets\package.targets" Pack="true" />
    <None PackagePath="images/" Include="assets\package-icon.png" Pack="true" />
  </ItemGroup>
</Project>
